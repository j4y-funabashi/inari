service: funabashi-photos
frameworkVersion: '2'

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-central-1
  httpApi:
    id: ${env:APIGATEWAYID, ''}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Query"
            - "dynamodb:GetItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:PutItem"
            - "dynamodb:BatchGetItem"
          Resource:
            - "arn:aws:dynamodb:eu-central-1:725941804651:table/inari-dynamodb-dev-InariDatastore-1VAD7YFUNHWKE"
            - "arn:aws:dynamodb:eu-central-1:725941804651:table/inari-dynamodb-dev-InariDatastore-1VAD7YFUNHWKE/*"

        - Effect: "Allow"
          Action:
            - "s3:GetObject"
            - "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::inari-mediastore-dev/*"
            - "arn:aws:s3:::inari-mediastore-dev/*"

        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            - "arn:aws:s3:::inari-thumbnailstore-dev/*"

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  timeline:
    handler: bin/timeline
    events:
      - httpApi:
          method: GET
          path: /api/months
          authorizer:
            type: jwt
            id: ${env:AUTHORIZERID, ''}

  timeline_month:
    handler: bin/timeline_month
    events:
      - httpApi:
          method: GET
          path: /api/month/{monthID+}
          authorizer:
            type: jwt
            id: ${env:AUTHORIZERID, ''}

  media_detail:
    handler: bin/media_detail
    events:
      - httpApi:
          method: GET
          path: /api/media/{mediaID+}
          authorizer:
            type: jwt
            id: ${env:AUTHORIZERID, ''}

  create_thumbnails:
    handler: bin/create_thumbnails
    events:
      - sns:
          arn: !Ref PostImportTopic
          topicName: "PostImportTopic"

  geocode_media:
    handler: bin/geocode_media
    environment:
      GOOGLE_API_KEY: ${ssm:GoogleApiKey}
    events:
      - sns:
          arn: !Ref PostImportTopic
          topicName: "PostImportTopic"

resources:
  Resources:

    PostImportTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "PostImportTopic"

    GoogleAPIKey:
      Type: 'AWS::SecretsManager::Secret'
      Properties:
        Name: GoogleApiKey

    ImportMediaQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "ImportMediaQueue"
        MessageRetentionPeriod: 1209600 ## (14 days)
        RedrivePolicy: 
          deadLetterTargetArn: !GetAtt ImportMediaDLQ.Arn
          maxReceiveCount: 3

    ImportMediaDLQ:
      Type: AWS::SQS::Queue
      Properties:
        MessageRetentionPeriod: 1209600 ## (14 days)
