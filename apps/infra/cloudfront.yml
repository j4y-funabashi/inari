AWSTemplateFormatVersion: "2010-09-09"
Description: Cloudfront distro for UI

Parameters:
  EnvironmentName:
    Description: The environment name
    Type: String
    Default: dev
    AllowedPattern: ^(dev|prod)$

  CloudFrontBaseDomain:
    Type: String
    Description: CloudFront base domain

  CloudFrontCertificate:
    Type: String
    Description: Public Certificate ARN

  UserPoolID:
    Type: String
    Description: Cognito user pool id

  ApiClientID:
    Type: String
    Description: Cognito app client id

Resources:
  PhotosApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "inari-photos-api-${EnvironmentName}"
      ProtocolType: HTTP

  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref PhotosApi
      StageName: !Sub "${EnvironmentName}"
      AutoDeploy: 'true'

  JWTAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId: !Ref PhotosApi
      AuthorizerType: JWT
      IdentitySource:
        - '$request.header.Authorization'
      JwtConfiguration:
        Audience:
        - !Ref ApiClientID
        Issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPoolID}"
      Name: jwt-authorizer

  cloudfrontoriginaccessidentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: cloudfront ID

  S3InariThumbnailStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "inari-thumbnailstore-${EnvironmentName}"

  ThumbnailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3InariThumbnailStoreBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3InariThumbnailStoreBucket}/*"
            Principal:
              CanonicalUser: !GetAtt cloudfrontoriginaccessidentity.S3CanonicalUserId

  S3InariUIBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "inari-ui-${EnvironmentName}"

  UIBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3InariUIBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3InariUIBucket}/*"
            Principal:
              CanonicalUser: !GetAtt cloudfrontoriginaccessidentity.S3CanonicalUserId

  cloudfrontdistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Enabled: 'true'
        PriceClass: PriceClass_100
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: "403"
            ResponsePagePath: "/index.html"
            ResponseCode: "200"
        Aliases:
          - !Ref CloudFrontBaseDomain
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFrontCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        Origins:
          - DomainName: !Join ["", !Split ["https://", !GetAtt PhotosApi.ApiEndpoint]]
            Id: PhotosApiOrigin
            OriginPath: !Sub "/${EnvironmentName}"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2

          - DomainName: !GetAtt S3InariUIBucket.DomainName
            Id: UIOrigin
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - "/"
                  - - "origin-access-identity/cloudfront"
                    - !Ref cloudfrontoriginaccessidentity
          - DomainName: !GetAtt S3InariThumbnailStoreBucket.DomainName
            Id: ThumbnailOrigin
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - "/"
                  - - "origin-access-identity/cloudfront"
                    - !Ref cloudfrontoriginaccessidentity
        DefaultCacheBehavior:
          Compress: 'true'
          TargetOriginId: UIOrigin
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
        CacheBehaviors:
          - AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            TargetOriginId: ThumbnailOrigin
            Compress: 'true'
            PathPattern: thmnb/*
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
          - PathPattern: /api/*
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            Compress: true
            ForwardedValues:
              Headers:
                - Accept
                - Authorization
              Cookies:
                Forward: "all"
              QueryString: true
            MinTTL: 0
            MaxTTL: 3600
            DefaultTTL: 300
            ViewerProtocolPolicy: redirect-to-https
            TargetOriginId: PhotosApiOrigin

Outputs:
  CloudFrontDistributionID:
    Value: !Ref cloudfrontdistribution
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDistributionID"

  S3InariUIBucketName:
    Value: !Ref S3InariUIBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3InariUIBucketName"

  S3InariUIBucketDomainName:
    Value: !GetAtt S3InariUIBucket.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-S3InariUIDomainName"

  PhotosAPIGatewayID:
    Value: !Ref PhotosApi
    Export:
      Name: !Sub "${AWS::StackName}-PhotosAPIGatewayID"

  PhotosAPIGatewayEndpoint:
    Value: !GetAtt PhotosApi.ApiEndpoint
    Export:
      Name: !Sub "${AWS::StackName}-PhotosAPIGatewayEndpoint"
